{"version":3,"sources":["flipMatch.js","about.js","abc.js","index.js"],"names":["Card","props","className","onClick","id","value","FlipMatch","state","current","cards","timeStart","time","nClear","nRow","nCol","totalCards","onInputRow","bind","onInputCol","this","initBoard","totalNum","nums","ranNums","ranCards","Array","fill","i","j","k","push","Math","floor","random","splice","pos","length","pop","setState","key","handleClick","isStart","display","document","getElementById","style","querySelector","toggleStart","start","Date","getTime","timer","setInterval","secs","min","strTime","padding","num","card","indexOf","slice","isStar","starIndex","setTimeout","clearInterval","backcard","currentCard","querySelectorAll","forEach","event","n","target","parseInt","isNaN","onInput","renderCard","boardStyle","width","boardWidth","height","type","disabled","disabledInput","defaultValue","restart","startTimer","React","Component","About","href","Item","toLowerCase","isFocus","Abc","itemsValue","focusState","tempClearIndex","copyItemsValue","score","letter","vals","promise","map","index","Promise","all","then","iDrop","colDrop","col","iSameCol","findIndex","e","promise1","dropItems","slide","setFocus","val","up","down","left","right","row","setFocusSameVal","valDrop","colsEmpty","checkMustSlideLeft","colStart","colMove","indexCopy","items","letters","renderItem","routes","path","component","exact","LinkItenm","label","to","activeOnlyWhenExact","match","useRouteMatch","RouterView","route","render","ReactDOM"],"mappings":"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","file":"static/js/main.9937075c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Card(props) {\n  return (\n    <div className=\"flip-card\" onClick={props.onClick} id={'card' + props.id}>\n      <div className=\"flip-card-inner\">\n        <div className=\"flip-card-front\">\n        </div>\n        <div className=\"flip-card-back\">\n          {props.value}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nclass FlipMatch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: [],\n      cards: [],\n      timeStart: 0,\n      time: \"0:00\",\n      nClear: 0,\n      nRow: 4,\n      nCol: 4,\n      totalCards: 16\n    }\n    this.onInputRow = this.onInputRow.bind(this);\n    this.onInputCol = this.onInputCol.bind(this);\n  }\n\n  componentDidMount() {\n    this.initBoard();\n  }\n\n  initBoard() {\n    const totalCards = this.state.nCol * this.state.nRow;\n    const totalNum = totalCards / 2;\n    let nums = [],\n      ranNums = [],\n      cards = [],\n      ranCards = Array(totalCards).fill(\"*\"),\n      i = totalCards,\n      j = 0;\n\n    for (let k = 0; k < totalCards; k++) {\n      nums.push(k);\n    }\n\n    for (let k = 1; k <= totalNum; k++) {\n      cards.push(k);\n      cards.push(k);\n    }\n\n    while (i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      ranNums.push(nums[j]);\n      nums.splice(j, 1);\n    }\n\n    for (let pos = 0; pos < totalCards; pos++) {\n      if (cards.length > 0) {\n        ranCards[ranNums[pos]] = cards.pop();\n      }\n    }\n\n    this.setState({ cards: ranCards, totalCards: totalCards });\n  }\n\n  renderCard(i) {\n    return <Card value={this.state.cards[i]} key={i} id={i} onClick={() => this.handleClick(i)} />\n  }\n\n  toggleStart(isStart) {\n    let display = isStart ? \"none\" : \"block\";\n    let className = isStart ? \"board\" : \"board not-start\";\n    const btn = document.getElementById(\"btnStart\");\n    btn.style.display = display;\n    const board = document.querySelector(\".board\");\n    board.className = className;\n  }\n  startTimer() {\n    this.toggleStart(true);\n    const start = new Date().getTime();\n    this.setState({\n      timeStart: start\n    });\n    this.timer = setInterval(() => {\n      let time = new Date().getTime() - this.state.timeStart;\n      let secs = Math.floor(time / 1000);\n      let min = 0;\n      if (secs > 60) {\n        min = Math.floor(secs / 60);\n      }\n      const strTime = min + \":\" + this.padding(secs);\n      this.setState({\n        time: strTime\n      })\n    }, 1000);\n  }\n\n  padding(num) {\n    if (num < 10) {\n      return \"0\" + num;\n    }\n    return num;\n  }\n\n  handleClick(i) {\n    let card = document.getElementById(\"card\" + i);\n    if (card && card.className.indexOf(\"hidden\") === -1) {\n      card.className += \" flip\";\n\n      let current = this.state.current.slice();\n      if (current.indexOf(i) > -1) {\n        return;\n      }\n      current.push(i);\n      this.setState({ current: current });\n      let isStar = false;\n      let starIndex = 0;\n      if( this.state.cards[current[0]] === \"*\") {\n        isStar = true;\n      }else if(this.state.cards[current[1]] === \"*\"){\n        starIndex = 1;\n        isStar = true;\n      }\n      if (current.length >= 2 || isStar) {\n        let nClear = this.state.nClear;\n        setTimeout(() => {\n          let className = \"flip-card\";\n          if (this.state.cards[current[0]] === this.state.cards[current[1]] || isStar) {\n            className += \" hidden\"\n            if (isStar) {\n              nClear++;\n            } else {\n              nClear = this.state.nClear + 2;\n            }\n            this.setState({ nClear: nClear });\n            if (nClear === this.state.totalCards) {\n              clearInterval(this.timer);\n            }\n          }\n          for (let j = 0; j < 2; j++) {\n            let backcard = document.getElementById(\"card\" + current[j]);\n            if (backcard) {\n              backcard.className = className;\n            }\n          }\n        }, 800);\n        let currentCard = this.state.current.slice(2);\n        if (isStar) {\n          currentCard = this.state.current.slice();\n          currentCard.splice(starIndex, 1);\n        }\n        this.setState({ current: currentCard });\n      }\n    }\n\n  }\n\n  restart() {\n    this.setState({\n      timeStart: 0,\n      nClear: 0,\n      time: \"0:00\"\n    })\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    this.toggleStart(false);\n    this.initBoard();\n    const cards = document.querySelectorAll(\".flip-card\");\n    cards.forEach(card => {\n      setTimeout(() => {\n        card.className = \"flip-card\";\n      })\n    })\n  }\n\n  onInput(event, key) {\n    let n = 0;\n    if (event.target.value) {\n      n = parseInt(event.target.value);\n    }\n    if (isNaN(n) || !n) {\n      n = 4;\n    }\n    let state = {};\n    state[key] = n;\n    this.setState(state);\n    setTimeout(() => {\n      this.initBoard();\n    }, 100);\n  }\n\n  onInputRow(event) {\n    this.onInput(event, \"nRow\");\n  }\n\n  onInputCol(event) {\n    this.onInput(event, \"nCol\");\n  }\n\n  boardWidth(n) {\n    return ((n * 50) + ((2 * n) - 1)) + 'px';\n  }\n\n  disabledInput() {\n    return this.state.timeStart !== 0;\n  }\n\n  render() {\n    let cards = [];\n    for (let i = 0; i < this.state.totalCards; i++) {\n      cards.push(this.renderCard(i));\n    }\n    const w = this.boardWidth(this.state.nCol);\n    const h = this.boardWidth(this.state.nRow);\n    const boardStyle = {\n      width: w,\n      height: h\n    }\n    return (\n      <div>\n        <div className=\"div-amount\">\n          <span>Amount of rows: </span>\n          <input type=\"text\"\n            onInput={this.onInputRow}\n            disabled={this.disabledInput()}\n            defaultValue=\"4\" />\n        </div>\n        <div className=\"div-amount\">\n        <span>Amount of columns: </span>\n          <input type=\"text\"\n            onInput={this.onInputCol}\n            disabled={this.disabledInput()}\n            defaultValue=\"4\" />\n        </div>\n        <br />\n        <button className=\"btn\" onClick={() => this.restart()}>Restart</button>\n        <div className=\"div-time\">Time: {this.state.time}</div>\n        <br/>\n        <div className=\"board not-start\" style={boardStyle}>\n          <div className={this.state.nClear===this.state.totalCards?'div-clear':'hide'}>Clear!</div>\n          <div id=\"btnStart\" className=\"btn-start\"\n            onClick={() => {\n              this.startTimer();\n            }}>Start</div>\n          {cards}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FlipMatch;","import React from 'react';\nfunction About() {\n  return (\n    <div className=\"about-container\">\n      <div className=\"header\">About</div>\n      <div className=\"box\">\n        <h3>Profile</h3>\n        <div className=\"d_fl\">\n          <div className=\"subject\">Name: </div>\n          <div>Wipada Pornsolpoltaweechai</div>\n        </div>\n        <div className=\"d_fl\">\n          <div className=\"subject\">Nickname: </div><div>Bo</div>\n        </div>\n        <div className=\"d_fl\">\n          <div className=\"subject\">Date of birth: </div>\n          <div>2 August, 1989</div>\n        </div>\n        <div className=\"d_fl\">\n          <div className=\"subject\">Job: </div>\n          <div>Programmer</div>\n        </div>\n        <div className=\"d_fl\">\n          <div className=\"subject\">Hobbies: </div>\n          <div>Reading, Playing Board Game</div>\n        </div>\n        <div className=\"d_fl\">\n          <div className=\"subject\">Sport: </div>\n          <div>Contract Bridge</div>\n        </div>\n      </div>\n      <div className=\"box\">\n        <h3>Contact</h3>\n        <div className=\"d_fl\">\n          <div className=\"subject\">E-mail: </div>\n          <div><a href=\"mailto:wp_wipada@hotmail.com\" target=\"_top\">wp_wipada@hotmail.com</a></div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default About;","import React from 'react';\n\nfunction Item(props) {\n  return (\n    <div className={`item ${props.value.toLowerCase()} ${props.isFocus ? 'focus' : ''}`}\n      onClick={props.onClick}>\n      {props.value}\n    </div>\n  )\n}\n\nclass Abc extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      itemsValue: [],\n      focusState: [],\n      tempClearIndex: [],\n      copyItemsValue: [],\n      score: 0\n    };\n  }\n  componentDidMount() {\n    this.initBoard();\n  }\n\n  renderItem(i, letter, isFocus) {\n    return <Item value={letter} key={i} isFocus={isFocus} onClick={() => this.handleClick(i)} />;\n  }\n\n  handleClick(i) {\n    const focusState = Array(81).fill(false);\n    const tempClearIndex = [];\n    if (this.state.itemsValue[i] === \"\") {\n      return;\n    }\n    if (!this.state.focusState[i]) {\n      this.setFocus(focusState, i, this.state.itemsValue[i], tempClearIndex);\n    } else {\n      if (this.state.tempClearIndex.length >= 2) {\n        let score = this.state.score + this.state.tempClearIndex.length;\n        const vals = this.state.itemsValue.slice();\n        const promise = this.state.tempClearIndex.map(index => {\n          vals[index] = \"\";\n          return 1;\n        });\n        Promise.all(promise).then(() => {\n          const tempClearIndex = this.state.tempClearIndex.slice();\n          const iDrop = [];\n          const colDrop = [];\n          tempClearIndex.forEach((index) => {\n            const col = index % 9;\n            if (colDrop.indexOf(col) === -1) {\n              colDrop.push(col);\n              iDrop.push(index);\n            } else {\n              const iSameCol = iDrop.findIndex(e => e % 9 === col);\n              if (iDrop[iSameCol] < index) {\n                iDrop.splice(iSameCol, 1);\n                iDrop.push(index);\n              }\n            }\n          });\n          setTimeout(() => {\n            const promise1 = iDrop.map(index => {\n              return this.dropItems(index, vals);\n            });\n            Promise.all(promise1).then(() => {\n              this.slide(vals);\n            });\n\n          }, 300);\n          this.setState({ focusState, tempClearIndex: [], itemsValue: vals, score });\n        });\n\n      } else {\n        this.setState({ focusState, tempClearIndex });\n      }\n    }\n  }\n\n  setFocusSameVal(focusState, i, val, tempClearIndex) {\n    const up = i - 9;\n    const down = i + 9;\n    const left = i - 1;\n    const right = i + 1;\n    const row = Math.floor(i / 9);\n    if (up >= 0) {\n      this.setFocus(focusState, up, val, tempClearIndex);\n    }\n    if (down <= 81) {\n      this.setFocus(focusState, down, val, tempClearIndex);\n    }\n    if (left >= row * 9) {\n      this.setFocus(focusState, left, val, tempClearIndex);\n    }\n    if (right <= ((row + 1) * 9) - 1) {\n      this.setFocus(focusState, right, val, tempClearIndex);\n    }\n  }\n\n  setFocus(focusState, i, val, tempClearIndex) {\n    if (!focusState[i] && val === this.state.itemsValue[i]) {\n      focusState[i] = true;\n      tempClearIndex.push(i);\n      this.setState({ focusState, tempClearIndex });\n      this.setFocusSameVal(focusState, i, this.state.itemsValue[i], tempClearIndex);\n    }\n  }\n\n  dropItems(i, itemsValue) {\n    let iDrop = i;\n    let valDrop = \"\";\n    while (itemsValue[iDrop] === \"\" && iDrop > 0) {\n      iDrop -= 9;\n    }\n    valDrop = itemsValue[iDrop];\n    if (valDrop !== \"\" && iDrop >= 0) {\n      itemsValue[iDrop] = \"\";\n      itemsValue[i] = valDrop;\n      this.setState({ itemsValue });\n      if (i - 9 >= 0) {\n        return this.dropItems(i - 9, itemsValue);\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  checkMustSlideLeft(itemsValue) {\n    let colsEmpty = [];\n    for (let col = 0; col < 9; col++) {\n      for (let i = 0; i < 9; i++) {\n        const index = (9 * i) + col;\n        if (itemsValue[index] !== \"\") {\n          break;\n        } else if (i === 8) {\n          if (colsEmpty.length === 0 || col - colsEmpty[colsEmpty.length - 1] === 1) {\n            colsEmpty.push(col);\n          } else {\n            return colsEmpty;\n          }\n        }\n      }\n    }\n    return colsEmpty;\n  }\n\n  slide(itemsValue) {\n    const colsEmpty = this.checkMustSlideLeft(itemsValue);\n    if (colsEmpty.length > 0) {\n      let colStart = colsEmpty[0];\n      let colMove = colStart;\n      if (colsEmpty.length > 1) {\n        colMove = colsEmpty[colsEmpty.length - 1];\n      }\n      for (let col = colStart; col < 9; col++) {\n        colMove++;\n        for (let i = 0; i < 9; i++) {\n          const index = (9 * i) + col;\n          if (colMove < 9) {\n            const indexCopy = (9 * i) + colMove;\n            // console.log('index', index, 'indexCopy', indexCopy)\n            itemsValue[index] = itemsValue[indexCopy];\n          } else {\n            itemsValue[index] = \"\";\n          }\n        }\n      }\n      this.setState({ itemsValue });\n    }\n  }\n\n  initBoard() {\n    let items = [];\n    const amount = 81;\n    const letters = [\"A\", \"B\", \"C\"];\n    for (let i = 0; i < amount; i++) {\n      const num = Math.floor(Math.random() * 3);\n      items.push(letters[num]);\n    }\n    this.setState({ itemsValue: items, copyItemsValue: items.slice(), focusState: Array(amount).fill(false) });\n  }\n\n  render() {\n    let items = [];\n    for (let i = 0; i < this.state.itemsValue.length; i++) {\n      items.push(this.renderItem(i, this.state.itemsValue[i], this.state.focusState[i]));\n    }\n\n    return (\n      <div>\n        <button className=\"btn\" onClick={() => this.initBoard()}>New Game</button>&nbsp;\n        <button className=\"btn\" onClick={() => {\n          this.setState({ itemsValue: this.state.copyItemsValue.slice() })\n        }}> Restart</button><br /><br />\n        <div>Score: {this.state.score}</div>\n        <div className=\"board game-abc\">\n          {items}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Abc;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport FlipMatch from './flipMatch.js';\nimport About from './about';\nimport Abc from './abc';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch\n} from \"react-router-dom\";\n\nconst routes = [\n  {\n    path: \"/\",\n    component: Home,\n    exact: true\n  },\n  {\n    path: \"/matching\",\n    component: FlipMatch\n  },\n  {\n    path: \"/abc\",\n    component: Abc\n  },\n  {\n    path: \"/about\",\n    component: About\n  }\n  \n];\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n        <nav className=\"nav\">\n          <ul>\n            <LinkItenm to=\"/\" label=\"Home\" activeOnlyWhenExact={true} />\n            <LinkItenm to=\"/matching\" label=\"Matching Game\" />\n            <LinkItenm to=\"/abc\" label=\"ABC Game\" />\n          </ul>\n        </nav>\n        <Switch>\n          {routes.map((route, i) => (\n            <RouterView key={i} {...route} />\n          ))}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nfunction Home() {\n  return (\n    <div className=\"lb-home\">\n      <div className=\"txt-home\">Home</div>\n      <div className=\"lb l\"></div>\n      <div className=\"lb r\"></div>\n    </div>\n  );\n}\n\nfunction LinkItenm({ label, to, activeOnlyWhenExact }) {\n  let match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact\n  });\n\n  return (\n    <li>\n      <Link to={to} className={match ? \"active\" : \"\"}>{label}</Link>\n    </li>\n  );\n}\n\nfunction RouterView(route) {\n  return (\n    <Route\n      path={route.path}\n      render={props => (\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}